version: '2'

services:

  # ----------------------------------------------------------------------- DMZ

  web-php:
    image: findot/nginx:php
    container_name: web-php
    hostname: web-php
    volumes:
      - ${RUNTIME}/web-php/etc:/etc/nginx
      - ${RUNTIME}/web-php/log:/var/log/nginx
      - ${RUNTIME}/web-php/www:/var/www
    networks:
      dmz:
        ipv4_address: 10.0.10.16
    restart: unless-stopped

  unanimity:
    image: 3mpr/unanimity:0.2.0
    container_name: unanimity
    hostname: unanimity
    networks:
      dmz:
        ipv4_address: 10.0.10.18
    environment:
      INTERFACE: ${UNANIMITY_INTERFACE}
      PORT: ${UNANIMITY_PORT}
      DB_ADAPTER: ${UNANIMITY_DB_ADAPTER}
      DB_HOST: ${UNANIMITY_DB_HOST}
      DB_PORT: ${UNANIMITY_DB_PORT}
      DB_USER: ${UNANIMITY_DB_USER}
      DB_PASSWORD: ${UNANIMITY_DB_PASSWORD}
      DB_DATABASE: ${UNANIMITY_DB_DATABASE}
      DATABASE_URL: ${UNANIMITY_DB_URL}
      JWT_SECRET: ${UNANIMITY_JWT_SECRET}
      ROCKET_ENV: production
    restart: unless-stopped

  registry:
    image: registry:2
    container_name: registry
    hostname: registry
    volumes:
      - ${RUNTIME}/registry/data:/var/lib/registry
      - ${RUNTIME}/registry/auth:/auth
    networks:
      dmz:
        ipv4_address: 10.0.10.17
    environment:
      REGISTRY_AUTH: ${REGISTRY_AUTH}
      REGISTRY_AUTH_HTPASSWD_REALM: ${REGISTRY_AUTH_HTPASSWD_REALM}
      REGISTRY_AUTH_HTPASSWD_PATH: ${REGISTRY_AUTH_HTPASSWD_PATH}
      REGISTRY_HTTP_ADDR: ${REGISTRY_HTTP_ADDR}
    restart: unless-stopped
  
  # ----------------------------------------------------------------------- SAN

  mysql:
    image: mysql:latest
    container_name: mysql
    hostname: mysql
    volumes:
      - ${RUNTIME}/mysql/etc:/etc/mysql
      - ${RUNTIME}/mysql/var:/var/lib/mysql
      - ${RUNTIME}/mysql/log:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'waffles4love'
    networks:
      san:
        ipv4_address: 10.0.0.16
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  postgres:
    image: postgres:10-alpine
    container_name: postgres
    hostname: postgres
    volumes:
      - ${RUNTIME}/postgresql/data:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_DATA: /var/lib/postgresql/data/pgdata
    networks:
      san:
        ipv4_address: 10.0.0.17
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    hostname: neo4j
    volumes:
      - ${RUNTIME}/neo4j/data:/data
    networks:
      san:
        ipv4_address: 10.0.0.19
    restart: unless-stopped

  # ----------------------------------------------------------------------- VPN

  tinc-vpn:
    image: findot/tinc:latest
    container_name: tinc-vpn
    hostname: tinc-vpn
    volumes:
      - ${RUNTIME}/tinc/etc:/etc/tinc
      - ${RUNTIME}/tinc/log:/var/log
      - /dev/net/tun:/dev/tun
    networks:
      vpn:
        ipv4_address: 254.254.254.250
    ports:
      - 655:655
      - 655:655/udp
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    stdin_open: true
    tty: true

  # ------------------------------------------------------------------- SANDBOX

  teamspeak:
    image: findot/teamspeak:3.9.1
    container_name: teamspeak
    hostname: teamspeak
    volumes:
      - ${RUNTIME}/teamspeak/log:/var/log/teamspeak
      - ${RUNTIME}/teamspeak/etc:/etc/teamspeak
    ports:
      - 9987:9987/udp
      - 30033:30033
      - 10011:10011
      - 41144:41144
    networks:
      sandbox:
        ipv4_address: 23.20.2.16
    environment:
      TS3SERVER_LICENSE: accept
    restart: unless-stopped

  sinusbot:
    image: sinusbot/docker
    container_name: sinusbot
    hostname: sinusbot
    environment:
      - OVERRIDE_PASSWORD=waffles4love
    volumes:
      - ${RUNTIME}/sinusbot/scripts:/opt/sinusbot/scripts
      - ${RUNTIME}/sinusbot/data:/opt/sinusbot/data
    networks:
      sandbox:
        ipv4_address: 23.20.2.17
    restart: unless-stopped

  drone-server:
    image: drone/drone:1
    container_name: drone-server
    hostname: drone-server
    environment:
      - DRONE_USER_CREATE=username:findot,admin:true
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_FILTER=${DRONE_USER_FILTER}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
    volumes:
      - ${RUNTIME}/drone/server:/var/lib/drone
    networks:
      sandbox:
        ipv4_address: 23.20.2.20
    restart: unless-stopped

  drone-agent:
    image: drone/drone-runner-docker:1
    container_name: drone-agent
    hostname: drone-agent
    command: agent
    environment:
      - DRONE_RPC_HOST=23.20.2.20
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_UI_USERNAME=${DRONE_UI_USERNAME}
      - DRONE_UI_PASSWORD=${DRONE_UI_PASSWORD}
      - DRONE_RUNNER_NETWORKS=${DRONE_RUNNER_NETWORKS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      sandbox:
        ipv4_address: 23.20.2.21
    restart: unless-stopped
    depends_on: [ drone-server ]
  
  web2py:
    image: findot/web2py:0.1
    container_name: web2py
    hostname: web2py
    volumes:
      - ${RUNTIME}/web2py/src:/usr/src/app/web2py/applications
      - ${RUNTIME}/web2py/log:/var/log/web2py
    networks:
      sandbox:
        ipv4_address: 23.20.2.24

  consultations:
    image: oragelac/django:mysql-libjpeg-0.1
    container_name: consultations
    hostname: consultations
    volumes:
      - ${RUNTIME}/consultations/src:/usr/src/app
    networks:
      sandbox:
        ipv4_address: 23.20.2.22
    environment:
      MYSQL_HOST: 23.20.2.1
    depends_on:
      - mysql
    restart: unless-stopped
    stdin_open: true
    tty: true
  
  utopia:
    image: oragelac/django:mysql-0.1
    container_name: utopia 
    hostname: utopia
    volumes:
      - ${RUNTIME}/utopia/src:/usr/src/app
    networks:
      sandbox:
        ipv4_address: 23.20.2.18
    environment:
      MYSQL_HOST: 23.20.2.1
    depends_on:
      - mysql
    restart: unless-stopped
    stdin_open: true
    tty: true

  depot:
    image: oragelac/django:mysql-0.1
    container_name: depot
    hostname: depot
    volumes:
      - ${RUNTIME}/depot/src:/usr/src/app
      - ${VDB}:/data
    networks:
      sandbox:
        ipv4_address: 23.20.2.28
    environment:
      MYSQL_HOST: 23.20.2.1
    depends_on:
      - mysql
    restart: unless-stopped
    stdin_open: true
    tty: true
